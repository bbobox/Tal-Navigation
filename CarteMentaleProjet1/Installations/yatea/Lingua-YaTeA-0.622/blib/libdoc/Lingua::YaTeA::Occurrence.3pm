.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Lingua::YaTeA::Occurrence 3pm"
.TH Lingua::YaTeA::Occurrence 3pm "2015-01-16" "perl v5.14.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Lingua::YaTeA::Occurrence \- Perl extension for the phrase occurrences
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&  use Lingua::YaTeA::Occurrence;
\&  Lingua::YaTeA::Occurrence\->new();
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module implements a reprensentation of a phrase occurrence. Each
occurrence is described by five fields: an identifier \f(CW\*(C`ID\*(C'\fR, a
reference to the object referring the sentence where the phrase occurs
\&\f(CW\*(C`SENTENCE\*(C'\fR, the character where the phrase begins \f(CW\*(C`START_CHAR\*(C'\fR, the
character where the phrase ends \f(CW\*(C`END_CHAR\*(C'\fR and the indication whether
the occurrence is a maximal noun phrase.
.SH "METHODS"
.IX Header "METHODS"
.SS "\fInew()\fP"
.IX Subsection "new()"
.Vb 1
\&  new();
.Ve
.PP
The method creates a new object for a phrase occurrence and returns the object.
.SS "\fIgetSentence()\fP"
.IX Subsection "getSentence()"
.Vb 1
\&  getSentence();
.Ve
.PP
The method returns the obeject referring the sentence where the phrase occurs.
.SS "\fIgetStartChar()\fP"
.IX Subsection "getStartChar()"
.Vb 1
\&  getStartChar();
.Ve
.PP
The method returns the start character of the phrase occurrence.
.SS "\fIgetEndChar()\fP"
.IX Subsection "getEndChar()"
.Vb 1
\&  getEndChar();
.Ve
.PP
The method returns the end character of the phrase occurrence.
.SS "\fIgetID()\fP"
.IX Subsection "getID()"
.Vb 1
\&  getID();
.Ve
.PP
The method returns the identifier of the phrase occurrence.
.SS "\fIgetDocument()\fP"
.IX Subsection "getDocument()"
.Vb 1
\&  getDocument();
.Ve
.PP
The method returns the document reference where the phrase occurs
.SS "\fIisMaximal()\fP"
.IX Subsection "isMaximal()"
.Vb 1
\&  isMaximal();
.Ve
.PP
The medthod indicates if the phrase occurrence is maximal.
.SS "\fIsetInfoForPhrase()\fP"
.IX Subsection "setInfoForPhrase()"
.Vb 1
\&   setInfoForPhrase(@words, $maximal);
.Ve
.PP
The method sets the information related to the phrase occurrence for
the array of words \f(CW@words\fR. \f(CW$maximal\fR indicates if the phrase
occurrence is maximal.
.SS "\fIsetInfoForTestifiedTerm()\fP"
.IX Subsection "setInfoForTestifiedTerm()"
.Vb 1
\&   setInfoForTestifiedTerm($sentence, $start_char, $end_char);
.Ve
.PP
The method sets the information related to the phrase occurrence for a
testified term: the object referring the sentence \f(CW$sentence\fR, the
start character \f(CW$start_char\fR and the end character \f(CW$end_char\fR.
.SS "\fIprint()\fP"
.IX Subsection "print()"
.Vb 1
\&   print($fh);
.Ve
.PP
The method prints the information related to the phrase occurrence in the file handler \f(CW$fh\fR.
.SS "\fIisNotBest()\fP"
.IX Subsection "isNotBest()"
.Vb 1
\&   isNotBest($other_occurrences_a,$parsing_direction);
.Ve
.PP
The method indicates if the current phrase occurrence is included in
one of the occurrence of the array \f(CW$other_occurrences_a\fR or
regarding the most convinient occurrence according to the parsing
direction \f(CW$parsing_direction\fR. In that case, it returns 1, otherwise
undef.
.SS "\fIcrossesWithoutPriority()\fP"
.IX Subsection "crossesWithoutPriority()"
.Vb 1
\&   crossesWithoutPriority($other,$parsing_direction);
.Ve
.PP
This method indicates if the current phrase occrrence is partially
embeded in a the other phrase occurrence \f(CW$other\fR, according to the
prioritu given by \f(CW$parsing_direction\fR. In that case, it returns 1, otherwise
undef.
.SS "\fIisIncludedIn()\fP"
.IX Subsection "isIncludedIn()"
.Vb 1
\&   isIncludedIn($other;
.Ve
.PP
The method indicates if the current phrase occurrence is included in
the phrase \f(CW$other\fR.  In that case, it returns 1, otherwise undef.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Sophie Aubin and Thierry Hamon. Improving Term Extraction with
Terminological Resources. In Advances in Natural Language Processing
(5th International Conference on \s-1NLP\s0, FinTAL 2006). pages
380\-387. Tapio Salakoski, Filip Ginter, Sampo Pyysalo, Tapio Pahikkala
(Eds). August 2006. \s-1LNAI\s0 4139.
.SH "AUTHOR"
.IX Header "AUTHOR"
Thierry Hamon <thierry.hamon@univ\-paris13.fr> and Sophie Aubin <sophie.aubin@lipn.univ\-paris13.fr>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2005 by Thierry Hamon and Sophie Aubin
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself, either Perl version 5.8.6 or,
at your option, any later version of Perl 5 you may have available.
